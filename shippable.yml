resources:

  - name: dks_app_img
    type: image
    # replace drship_dockerhub with your docker hub integration name
    integration: drship_dockerhub
    pointer:
      # replace devopsrecipes/dks_node_sample_app with your docker registry
      # repository
      sourceName: devopsrecipes/dks_node_sample_app
    seed:
      versionName: "latest"

  - name: dks_secrets
    type: integration
    integration: drship_kube_secrets

  - name: dks_gitRepo
    type: gitRepo
    # replace dr_github with your GitHub integration name
    integration: dr_github
    pointer:
      # replace with source code location (e.g. GitHub) where you cloned this
      # sample project.
      sourceName: devops-recipes/deploy-kubernetes-secrets
      branch: master

  - name: dks_kube_cliConfig
    type: cliConfig
    #replace with your Kubernetes integration name
    integration: drship_kube
    pointer:
      # replace us-central1-a with your availability zone
      region: us-central1-a

  - name: dks_secret_opts
    type: dockerOptions
    version:
      volumeMounts:
        - name: secret-volume
          mountPath: "/etc/secrets"
          readOnly: true
      pod:
        volumes:
          - name: secret-volume
            secret:
              secretName: auth-token-secret

  - name: dks_lb
    type: loadBalancer
    #replace with your Kubernetes integration name
    integration: drship_kube
    pointer:
      sourceName: "dks-loadbalancer"
      method: LoadBalancer
      # replace devops-test-cluster with your google container engine cluster name
      clusterName: "devops-test-cluster"
    version:
      ports:
        - name: testport
          protocol: TCP
          port: 80
      selector:
        shippable.manifestName: "dks-app-def"
        shippable.jobName: "dks-app-deploy"

  - name: dks_kube_cluster
    type: cluster
    #replace with your Kubernetes integration name
    integration: drship_kube
    pointer:
      # replace devops-test-cluster with your google container engine cluster name
      sourceName: "devops-test-cluster"
      # replace us-central1-a with your availability zone
      region: us-central1-a


jobs:

  - name: dks-app-def
    type: manifest
    steps:
      - IN: dks_app_img
      - TASK: managed

  - name: create_secret
    type: runSh
    steps:
      - IN: dks_gitRepo
        # manually trigger the job and not on every commit to the repository
        switch: off
      - IN: dks_kube_cliConfig
      - IN: dks-app-def
      - IN: dks_secrets
      - TASK:
        - script: |
            pushd $(shipctl get_resource_state "dks_gitRepo")/kubernetes-secrets
              # Replace placeholders in the secret yml with environment variables
              # injected by the key-value pair integration
              shipctl replace ./create-secret.yml
              cat ./create-secret.yml

              # Delete and create the secret
              kubectl delete secret auth-token-secret 2>/dev/null || echo "secret does not exist"
              kubectl create -f ./create-secret.yml
            popd

  - name: dks-app-deploy
    type: deploy
    method: replace
    steps:
      - IN: create_secret
      - IN: dks_secret_opts
      - IN: dks-app-def
        switch: off
      - IN: dks_kube_cluster

  - name: dks-provision-lb
    type: provision
    steps:
      - IN: dks_lb
